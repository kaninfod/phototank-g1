c
Photo.joins(:location).where(exp).to_sql
n
c
self.end.to_time + 25.hours - 1.seconds
self.end.to_time + 25.hours
self.end.to_time
((self.end + 1).to_time - 1.seconds) + 1.hours
((self.end + 1).to_time - 1.seconds) + 1hours
((self.end + 1).to_time - 1.seconds)
((self.end + 1).to_time - 1.seconds).utc
((self.end + 1).to_time - 1.seconds).to_datetime.utc
((self.end + 1).to_time - 1.seconds).to_datetime
(self.end + 1).to_time - 1.seconds
(self.end + 1).to_time -1.seconds
(self.end + 1).to_time
(self.end.to_datetime + 1).to_time
self.end.to_datetime + 1
self.end.to_datetime
self.start.to_datetime
((self.end.to_datetime + 1).to_time - 1.seconds).to_datetime
((self.end.to_timedate + 1).to_time - 1.seconds).to_datetime
self.start.to_datetime
self.start
((self.end + 1).to_time - 1.seconds).to_datetime
Photo.joins(:location).where(exp).to_sql
n
c
Photo.joins(:location).where(exp).to_sql
n
c
Photo.joins(:location).where(exp).to_sql
n
c
date_end
self.start
Photo.joins(:location).where(exp).to_sql
n
c
n
c
Photo.joins(:location).where(exp).to_sql
n
c
self.end
((self.end + 1).to_time - 1.seconds).to_datetime
((self.start + 1).to_time - 1.seconds).to_datetime
((self.start + 1)..to_time - 1.seconds).to_datetime
(self.start.to_time - 1.seconds).to_datetime
(self.start.to_time - 1.minutes).to_datetime
(self.start.to_time - 1.hours).to_datetime
(self.start.to_time - 1/24).to_datetime
(self.start.to_time - 1/24).to_date
(self.start.to_time - 1/24)
self.start.to_time - 1/24
k + 1/24
k
k=self.start.to_datetime 
self.start.to_datetime + 1/24
self.start.to_datetime 
self.start.to_datetime + (1 - 1/24)
self.start.to_datetime + 1 - 1/24
self.start.to_datetime + 1 - 1/3600
self.start.to_datetime + 1 -1/3600
self.start.to_datetime + 1 
self.start.to_datetime + 1 - 1.min
self.start.to_datetime + 1
self.start.to_datetime
self.start
c
Photo.joins(:location).where(exp).to_sql
c
exif.datetimeoriginal
c
exif.datetimeoriginal
exif.CreateDate
exif.createddate
exif.datetimeoriginal
n
exifn
c
exif
exif.datetimeoriginal
exif.datetimeoriginal.blank?
c
Photo.joins(:location).where(exp).to_sql
c
Photo.joins(:location).where(exp).to_sql
c
@searchalbum
n
c
@searchalbum
n
@searchalbum
c
@searchalbum
params
n
params
c
Photo.joins(:location).where(exp)
Photo.joins(:location).where(exp).to_sql
c
Photo.joins(:location).where(exp).to_sql
c
self.start
self.start = self.start.to_date
k
k=k.to_date
k.to_date
k
l
k = self.start
self.start
self.start = self.start.to_date
self.start
Photo.joins(:location).where(exp).to_sql
c
self.start.to_date
self.start
Photo.joins(:location).where(exp).to_sql
exp
c
n
self
c
@searchalbum 
n
c
n
c
n
c
n
c
n
c
n
c
params[:enddatec]
params[:enddate]
params
params[:enddate].to_date
params[:startdate].to_date
params[:startdate].to_date..params[:enddate].to_date
Photo.where(:date_taken => params[:startdate].to_date..params[:enddate].to_date).page
params[:startdate].to_date
n
params[:startdate].empty?
n
params.has_key?(:startdate)
params
c
params
c
params[:startdate].to_date
params[:startdate]
params
c
params
n
c
n
c
not params[:startdate].empty?
notparams[:startdate].empty?
not(params[:startdate].empty?)
params[:startdate].empty?
c
params.has_key?(:startdate)
c
Photo.where(:date_taken => params[:startdate].to_date..params[:enddate].to_date)
params[:startdate].to_date
params[:startdate].to_d
params[:startdate]
params[:startdate
Photo.where(:date_taken => params[:startdate]..params[:enddate])
c
Photo.first
Photo.all
Photos.all
Photo.where(:date_taken => params[:startdate]..params[:enddate])
params
c
params
c
params
Photo.where{date_taken.gte(params[:startdate])}
Photo.where{date_taken.gte(params[:startdate])}.count
Photo.where{date_taken.gte(params[:startdate])}.nil?
Photo.where{date_taken.gte(params[:startdate])}.blank?
Photo.where{date_taken.gte(params[:startdate])}
@photos.blank?
@photos = Photo.where{date_taken.gte(params[:startdate])}
c
Photo.where{date_taken.gte(params[:startdate])}
params[:startdate]
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
bundle
params
c
params
c
n
e
n
e
n
e
n
photo_exist(image_signature, self.date_taken)
n
continue
qq
c
path
c
n
c
photo.absolutepath(self.id)
