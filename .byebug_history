q
similar_locations
c
similar_locations
c
similar_locations
n
c
photo
c
n
photo
n
photo
n
instance
n
instance
n
c
q
e
n
photo
exif.datetimeoriginal 
n
exif.datetimeoriginal.blank?
exif
n
q
c
n
q
n
File.file?(jpeg_file)
if File.file?(jpeg_file)
jpeg_file
c
q
c
e
n
r
n
Dir.glob("#{path}/*.jpg")
Dir.glob("#{path}/*.jpg").each do |jpeg_file|
Dir.glob("#{path}/*.jpg").each do |jpeg_file| do
Dir.glob("#{path}/*.jpg").each do |jpeg_file|
path
c
n
e
n
e
n
c
Catalog.find(params[:id]).photos
Catalog.joins(:photos).where('catalogs.id=?', params[:id]).where('photos.id=?', 1).photos
Catalog.joins(:photos).where('catalogs.id=?', params[:id]).where('photos.id=?', 1)
Catalog.joins(:photos).find(params[:id]).where('photos.id=?', 1)
Catalog.joins(:photos).find(params[:id])
Catalog.joins(:photos)find(params[:id])
Catalog.find(params[:id]).photos
Catalog.where(id: params[:id]).photos
Catalog.where(id: params[:id])
Catalog.where(id: params[:id]).photos
Catalog.where(id: params[:id])
Catalog.where(created_at > insert_time)
insert_time
c
Catalog.where(id: params[:id]).where(:created_at > insert_time)
Catalog.where(id: params[:id]).where(created_at > insert_time)
Catalog.where(id: params[:id])
insert_time
Catalog.where{id.eq(params[:id]) & created_at.gt(insert_time)}
c
n
c
n
@photo
jpeg_file
n
c
n
c
e
n
File.exist?(watch_path) 
n
c
File.exist?(watch_path) 
watch_path
n
c
n
e
n
watch_path
n
c
File.exists?(watch_path)
File.exists(watch_path)
File.exist(watch_path)
watch_path
n
c
n
path
n
params
Catalog.find(params[:id])
c
n
params
