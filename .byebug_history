c
album
n
c
rec.to_s
rec.year.to_s
rec
rec.year
rec.year.to_i
rec
n
c
Catalog.find(1).update(catalog)
Catalog.update(catalog)
catalog
n
c
n
c
exception
n
c
exception
n
c
catalog
n
catalog
n
c
p=params.permit(:name, :type)
p=params.permit(:name, :type,)
c
p=params.permit(:name, :type,)
p=params.permit(:name, :type,:kaj)
p=params.permit(:name, :type)
p=params.require(:catalog).permit(:name, :type)
params
p=params.require(:catalog).permit(:name, :type)
c
request.post?
request.get?
c
request.get?
request.post?
request
params.require(:catalog).permit(:name, :path, :watch_path, :type)
params.require(:catalog).permit(:name, :path, :default, :watch_path, :type)
catalog_params
params.require(:catalog)
c
params.require(:name)
params.require(:catalog)
params.require(params)
catalog_params
c
params.require(params)
params.require
catalog_params(params)
catalog_params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
@catalog.type
@catalog
n
params
c
n
@catalog
n
params
p.validate_files
n
c
n
small_filename
File.join(catalog_path, small_filename)
File.exist?(File.join(catalog_path, small_filename))
catalog_path
n
catalog_path
File.exist?(File.join(catalog_path, small_filename))
File.exist?(absolutepath)
self.catalog(catalog_id).path
catalog_id
s
p.validate_files
n
Photo.where{filename.eq(photo_obj['filename']) & date_taken.eq(photo_obj['date_taken'])}.first
Photo.where{filename.eq(photo_obj['filename']) & date_taken.eq(photo_obj['date_taken'])}
Photo.where{filename.eq(photo_obj['filename']) & date_taken.eq(photo_obj['date_taken'])}.first
Photo.where{filename.eq(photo_obj['filename']) & date_taken.eq(photo_obj['date_taken'])}.present?
c
q
self
qy
c
self.catalog(catalog_id)
catalog_id
self.catalog(catalog_id).path
c
n
c
Catalog.master.id
Catalog.master
catalog_id
c
@catalog.watch_path.join(', ')
@catalog.watch_path.join(',')
@catalog.watch_path
n
c
params
c
params
path_array
n
cn
c
path_array
puts 'lak' if params.has_key? :wp_1
puts 'lak' if params
puts 'lak' if k=0
params.each do |k, v| puts k end 
params.each do |k, v|
n
params
n
c
params.has_key?:wp_1
params.has_key?(:wp_1)
paramshas_key?(:wp_1)
paramshas_key? :wp_1
paramshas_key? [:wp_1]
params[:wp_1]?
params[:wp_1]
params
c
n
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
n
c
similar_locations.count(:all)
similar_locations
@photo.nearbys(1).where.not(location_id: nil)
similar_locations.count
n
similar_locations.count
@photo.nearbys(1).where.not(location_id: nil)
c
@photo
e
n
@photo
k
k.longitude = 153.195555555556
k
k.longitude = 151.195555555556
k
k=Photo.new(photo)
Photo.new(photo)
photo
n
photo_obj
n
photo_obj
n
photo_obj
n
photo_obj
n
photo_obj
n
s
photo
n
c
photo
n
photo
n
photo_obj['longitude'].class
photo_obj['longitude']
n
photo_obj['longitude']
exif.gpslongitude.class
exif.gpslongitude
@photo
n
c
e
n
@photo
n
c
@photo
n
c
@photo
n
c
@photo
n
c
@photo
n
c
@photo
n
c
@photo
n
c
@photo
n
