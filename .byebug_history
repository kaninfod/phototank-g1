c
n
photo_obj
c
photo_obj
c
photo_obj
$redis.get(0)
c
where
d
h
c
cc
c
$redis.get(0)
c
b
c
$redis.get(0)
photo
photo_obj.to_json
p
photo_obj
photo_obj.to_json
c
p
$redis.set objid, photo_obj.to_json
photo_obj.to_json
p
n
c
n
JSON.parse($redis.get(2))
          photo.status = 1
c
n
 photo_obj
n
b
sub_path
n
e
n
photo_obj 
n
c
e.message
e
n
photo_obj 
n
c
e
n
c
n
e
n
photo_obj
n
JSON.parse($redis.get(1))
c
photo_obj
photo_obj'
photo_obj
c
photo_obj
c
JSON.parse($redis.get(objid))
objid
photo_obj
c
photo_obj
e.message
e
n
e
n
e
n
c
n
c
n
photo.save
photo
n
Location.all
n
photo.location
photo
n
photo
n
similar_locations.first
similar_locations
n
photo
c
n
e
n
e
n
photo
n
c
n
c
similar_locations.to_sql
similar_locations
n
c
n
c
Photo.first.nearbys(1).where.not(location_id: nil)
Photo.first.nearbys(1).to_sql
Photo.first.nearbys(1).where.not(location_id ).to_sql
Photo.first.nearbys(1).where.not(location: nil)
Photo.first..nearbys(1).where.not(location: nil)
photo.nearbys(1).where.not(location: nil).to_sql
photo.nearbys(1).where.not(location: nil)
Photo.joins(:location).where(photo.id =1).to_sql
Photo.joins(:location).where(photo.id =1)
similar_locations.count
similar_locations
similar_locations = photo.nearbys(1).joins(:location).where.not(location: nil)
n
c
similar_locations.blank?
e
n
 photo.nearbys(1).joins(:location).where.not(location: nil)
c
n
c
photo.nearbys(1).joins(:location).where.not(location: nil).first
photo.nearbys(1).joins(:location).where.not(location: nil)
photo.nearbys(1).joins(:location).where.not(location: nil).to_sql
photo.nearbys(1).where.not(location: nil).to_sql
photo.nearbys(1).where.not(location: nil)
photo
photo.nearbys(1)
c
n
e
n
photo.nearbys(1)
e
n
photo
c
photo
c
photo
c
n
photo
n
photo
c
photo
e
n
e
n
q
similar_locations
c
similar_locations
c
similar_locations
n
c
photo
c
n
photo
n
photo
n
instance
n
instance
n
c
q
e
n
photo
exif.datetimeoriginal 
n
exif.datetimeoriginal.blank?
exif
n
q
c
n
q
n
File.file?(jpeg_file)
if File.file?(jpeg_file)
jpeg_file
c
q
c
e
n
r
n
Dir.glob("#{path}/*.jpg")
Dir.glob("#{path}/*.jpg").each do |jpeg_file|
Dir.glob("#{path}/*.jpg").each do |jpeg_file| do
Dir.glob("#{path}/*.jpg").each do |jpeg_file|
path
c
n
e
n
e
n
c
Catalog.find(params[:id]).photos
Catalog.joins(:photos).where('catalogs.id=?', params[:id]).where('photos.id=?', 1).photos
Catalog.joins(:photos).where('catalogs.id=?', params[:id]).where('photos.id=?', 1)
Catalog.joins(:photos).find(params[:id]).where('photos.id=?', 1)
Catalog.joins(:photos).find(params[:id])
Catalog.joins(:photos)find(params[:id])
Catalog.find(params[:id]).photos
Catalog.where(id: params[:id]).photos
Catalog.where(id: params[:id])
Catalog.where(id: params[:id]).photos
Catalog.where(id: params[:id])
Catalog.where(created_at > insert_time)
insert_time
c
Catalog.where(id: params[:id]).where(:created_at > insert_time)
Catalog.where(id: params[:id]).where(created_at > insert_time)
Catalog.where(id: params[:id])
insert_time
Catalog.where{id.eq(params[:id]) & created_at.gt(insert_time)}
c
n
c
n
@photo
jpeg_file
n
c
n
c
e
n
File.exist?(watch_path) 
n
